# Generated by Django 5.0.3 on 2025-09-30 15:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('target_muscles', models.JSONField(blank=True, default=list, help_text="A list of muscle groups targeted, e.g., ['Chest', 'Triceps']")),
                ('equipment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short name for the goal.', max_length=150)),
                ('goal_type', models.CharField(choices=[('WEIGHT', 'Weight Loss/Gain'), ('EXERCISE', 'Exercise Performance'), ('OTHER', 'Other Fitness Goal')], max_length=10)),
                ('target_value', models.CharField(help_text="E.g., '80 kg', '50 pushups', 'Run 5k'", max_length=100)),
                ('is_achieved', models.BooleanField(default=False)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('goal', models.TextField(blank=True, null=True)),
                ('frequency', models.CharField(blank=True, help_text='E.g., 3 times a week, daily.', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='UserTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='PlanExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sets', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('reps_or_duration', models.CharField(help_text="E.g., '10 reps', '30 seconds', 'Failure'", max_length=50)),
                ('order', models.PositiveSmallIntegerField(help_text='The sequence of the exercise in the workout.')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='core.exercise')),
                ('workout_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_exercises', to='core.workoutplan')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('workout_plan', 'order')},
            },
        ),
    ]
